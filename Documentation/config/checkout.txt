checkout.defaultRemote::
	When you run 'git checkout <something>'
	or 'git switch <something>' and only have one
	remote, it may implicitly fall back on checking out and
	tracking e.g. 'origin/<something>'. This stops working as soon
	as you have more than one remote with a '<something>'
	reference. This setting allows for setting the name of a
	preferred remote that should always win when it comes to
	disambiguation. The typical use-case is to set this to
	`origin`.
+
Currently this is used by linkgit:git-switch[1] and
linkgit:git-checkout[1] when 'git checkout <something>'
or 'git switch <something>'
will checkout the '<something>' branch on another remote,
and by linkgit:git-worktree[1] when 'git worktree add' refers to a
remote branch. This setting might be used for other checkout-like
commands or functionality in the future.

checkout.workers::
	The number of worker processes to use when updating the working tree.
	If unset (or set to a value less than one), Git will use as many
	workers as the number of logical cores available. One means sequential
	execution. This and the checkout.workersThreshold settings affect all
	commands which perform checkout. E.g. checkout, switch, clone,
	sparse-checkout, read-tree, etc.

checkout.workersThreshold::
	If set to a positive number, parallel checkout will not be attempted
	when the number of files to be updated is less than the defined limit.
	When set to a negative number or unset, defaults to 0. The reasoning
	behind this config is that, when modifying a small number of files, a
	sequential execution might be faster, as it avoids the cost of spawning
	subprocesses and inter-process communication.
